openapi: 3.0.3
servers:
  - url: https://api.github.com
info:
  contact:
    name: Support
    url: https://support.github.com/contact
  description: GitHub's v3 REST API (Abriged 4 Automaton\)
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  title: GitHub v3 REST API
  version: 1.1.4
  x-apisguru-categories:
    - collaboration
    - developer_tools
  x-logo:
    url: https://twitter.com/github/profile_image?size=original
  x-origin:
    - format: openapi
      url: https://raw.githubusercontent.com/github/rest-api-description/main/descriptions/api.github.com/api.github.com.json
      version: "3.0"
  x-providerName: github.com
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
tags:
  - description: List emojis available to use on GitHub.
    name: emojis
  - description: Look for stuff on GitHub.
    name: search
  - description: Interact with and view information about users and also current user.
    name: users
paths:
  /search/code:
    get:
      description: >-
        Searches for query terms inside of a file. This method returns up
        to 100 results [per
        page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).


        When searching for code, you can get text match metadata for the file **content** and file **path** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).


        For example, if you want to find the definition of the `addClass` function inside [jQuery](https://github.com/jquery/jquery) repository, your query would look something like this:


        `q=addClass+in:file+language:js+repo:jquery/jquery`


        This query searches for the keyword `addClass` within a file's contents. The query limits the search to files where the language is JavaScript in the `jquery/jquery` repository.


        #### Considerations for code search


        Due to the complexity of searching code, there are a few restrictions on how searches are performed:


        *   Only the _default branch_ is considered. In most cases, this will be the `master` branch.

        *   Only files smaller than 384 KB are searchable.

        *   You must always include at least one search term when searching source code. For example, searching for [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code) is not valid, while [`amazing

        language:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code) is.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/search/#search-code
      operationId: search/code
      parameters:
        - description: The query contains one or more search keywords and qualifiers.
            Qualifiers allow you to limit your search to specific areas of
            GitHub. The REST API supports the same qualifiers as GitHub.com. To
            learn more about the format of the query, see [Constructing a search
            query](https://docs.github.com/rest/reference/search#constructing-a-search-query).
            See "[Searching
            code](https://help.github.com/articles/searching-code/)" for a
            detailed list of qualifiers.
          in: query
          name: q
          required: true
          schema:
            type: string
        - description: "Sorts the results of your query. Can only be `indexed`, which
            indicates how recently a file has been indexed by the GitHub search
            infrastructure. Default: [best
            match](https://docs.github.com/rest/reference/search#ranking-search\
            -results)"
          in: query
          name: sort
          required: false
          schema:
            enum:
              - indexed
            type: string
        - $ref: "#/components/parameters/order"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/code-search-result-item-paginated"
              schema:
                properties:
                  incomplete_results:
                    type: boolean
                  items:
                    items:
                      $ref: "#/components/schemas/code-search-result-item"
                    type: array
                  total_count:
                    type: integer
                required:
                  - total_count
                  - incomplete_results
                  - items
                type: object
          description: response
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/validation_failed"
        "503":
          $ref: "#/components/responses/service_unavailable"
      summary: Search code
      tags:
        - search
      x-github:
        category: search
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: null
  /search/commits:
    get:
      description: >-
        Find commits via various criteria on the default branch (usually
        `master`). This method returns up to 100 results [per
        page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).


        When searching for commits, you can get text match metadata for the **message** field when you provide the `text-match` media type. For more details about how to receive highlighted search results, see [Text match

        metadata](https://docs.github.com/rest/reference/search#text-match-metadata).


        For example, if you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:


        `q=repo:octocat/Spoon-Knife+css`
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/search/#search-commits
      operationId: search/commits
      parameters:
        - description: The query contains one or more search keywords and qualifiers.
            Qualifiers allow you to limit your search to specific areas of
            GitHub. The REST API supports the same qualifiers as GitHub.com. To
            learn more about the format of the query, see [Constructing a search
            query](https://docs.github.com/rest/reference/search#constructing-a-search-query).
            See "[Searching
            commits](https://help.github.com/articles/searching-commits/)" for a
            detailed list of qualifiers.
          in: query
          name: q
          required: true
          schema:
            type: string
        - description: "Sorts the results of your query by `author-date` or
            `committer-date`. Default: [best
            match](https://docs.github.com/rest/reference/search#ranking-search\
            -results)"
          in: query
          name: sort
          required: false
          schema:
            enum:
              - author-date
              - committer-date
            type: string
        - $ref: "#/components/parameters/order"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/commit-search-result-item-paginated"
              schema:
                properties:
                  incomplete_results:
                    type: boolean
                  items:
                    items:
                      $ref: "#/components/schemas/commit-search-result-item"
                    type: array
                  total_count:
                    type: integer
                required:
                  - total_count
                  - incomplete_results
                  - items
                type: object
          description: response
        "304":
          $ref: "#/components/responses/not_modified"
        "415":
          $ref: "#/components/responses/preview_header_missing"
      summary: Search commits
      tags:
        - search
      x-github:
        category: search
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: cloak
            note: >-
              The Commit Search API is currently available for developers to preview.
              During the preview period, the APIs may change without advance
              notice. Please see the [blog
              post](https://developer.github.com/changes/2017-01-05-commit-search-api/)
              for full details.


              To access the API you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:

              ```shell

              application/vnd.github.cloak-preview

              ```
            required: true
        subcategory: null
  /search/issues:
    get:
      description: >-
        Find issues by state and keyword. This method returns up to 100
        results [per
        page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).


        When searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields when you pass the `text-match` media type. For more details about how to receive highlighted

        search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).


        For example, if you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.


        `q=windows+label:bug+language:python+state:open&sort=created&order=asc`


        This query searches for the keyword `windows`, within any open issue that is labeled as `bug`. The search runs across repositories whose primary language is Python. The results are sorted by creation date in ascending order, which means the oldest issues appear first in the search results.


        **Note:** For [user-to-server](https://docs.github.com/developers/apps/identifying-and-authorizing-users-for-github-apps#user-to-server-requests) GitHub App requests, you can't retrieve a combination of issues and pull requests in a single query. Requests that don't include the `is:issue` or `is:pull-request` qualifier will receive an HTTP `422 Unprocessable Entity` response. To get results for both issues and pull requests, you must send separate queries for issues and pull requests. For more information about the `is` qualifier, see "[Searching only issues or pull requests](https://docs.github.com/github/searching-for-information-on-github/searching-issues-and-pull-requests#search-only-issues-or-pull-requests)."
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/search/#search-issues-and-pull-requests
      operationId: search/issues-and-pull-requests
      parameters:
        - description: The query contains one or more search keywords and qualifiers.
            Qualifiers allow you to limit your search to specific areas of
            GitHub. The REST API supports the same qualifiers as GitHub.com. To
            learn more about the format of the query, see [Constructing a search
            query](https://docs.github.com/rest/reference/search#constructing-a-search-query).
            See "[Searching issues and pull
            requests](https://help.github.com/articles/searching-issues-and-pull-requests/)"
            for a detailed list of qualifiers.
          in: query
          name: q
          required: true
          schema:
            type: string
        - description: "Sorts the results of your query by the number of `comments`,
            `reactions`, `reactions-+1`, `reactions--1`, `reactions-smile`,
            `reactions-thinking_face`, `reactions-heart`, `reactions-tada`, or
            `interactions`. You can also sort results by how recently the items
            were `created` or `updated`, Default: [best
            match](https://docs.github.com/rest/reference/search#ranking-search\
            -results)"
          in: query
          name: sort
          required: false
          schema:
            enum:
              - comments
              - reactions
              - reactions-+1
              - reactions--1
              - reactions-smile
              - reactions-thinking_face
              - reactions-heart
              - reactions-tada
              - interactions
              - created
              - updated
            type: string
        - $ref: "#/components/parameters/order"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/issue-search-result-item-paginated"
              schema:
                properties:
                  incomplete_results:
                    type: boolean
                  items:
                    items:
                      $ref: "#/components/schemas/issue-search-result-item"
                    type: array
                  total_count:
                    type: integer
                required:
                  - total_count
                  - incomplete_results
                  - items
                type: object
          description: response
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/validation_failed"
        "503":
          $ref: "#/components/responses/service_unavailable"
      summary: Search issues and pull requests
      tags:
        - search
      x-github:
        category: search
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: null
  /search/labels:
    get:
      description: >-
        Find labels in a repository with names or descriptions that match
        search keywords. Returns up to 100 results [per
        page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).


        When searching for labels, you can get text match metadata for the label **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).


        For example, if you want to find labels in the `linguist` repository that match `bug`, `defect`, or `enhancement`. Your query might look like this:


        `q=bug+defect+enhancement&repository_id=64778136`


        The labels that best match the query appear first in the search results.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/search/#search-labels
      operationId: search/labels
      parameters:
        - description: The id of the repository.
          in: query
          name: repository_id
          required: true
          schema:
            type: integer
        - description: The search keywords. This endpoint does not accept qualifiers in
            the query. To learn more about the format of the query, see
            [Constructing a search
            query](https://docs.github.com/rest/reference/search#constructing-a-search-query).
          in: query
          name: q
          required: true
          schema:
            type: string
        - description: "Sorts the results of your query by when the label was `created` or
            `updated`. Default: [best
            match](https://docs.github.com/rest/reference/search#ranking-search\
            -results)"
          in: query
          name: sort
          required: false
          schema:
            enum:
              - created
              - updated
            type: string
        - $ref: "#/components/parameters/order"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/label-search-result-item-paginated"
              schema:
                properties:
                  incomplete_results:
                    type: boolean
                  items:
                    items:
                      $ref: "#/components/schemas/label-search-result-item"
                    type: array
                  total_count:
                    type: integer
                required:
                  - total_count
                  - incomplete_results
                  - items
                type: object
          description: response
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed"
      summary: Search labels
      tags:
        - search
      x-github:
        category: search
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: null
  /search/repositories:
    get:
      description: >-
        Find repositories via various criteria. This method returns up to
        100 results [per
        page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).


        When searching for repositories, you can get text match metadata for the **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).


        For example, if you want to search for popular Tetris repositories written in assembly code, your query might look like this:


        `q=tetris+language:assembly&sort=stars&order=desc`


        This query searches for repositories with the word `tetris` in the name, the description, or the README. The results are limited to repositories where the primary language is assembly. The results are sorted by stars in descending order, so that the most popular repositories appear first in the search results.


        When you include the `mercy` preview header, you can also search for multiple topics by adding more `topic:` instances. For example, your query might look like this:


        `q=topic:ruby+topic:rails`
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/search/#search-repositories
      operationId: search/repos
      parameters:
        - description: The query contains one or more search keywords and qualifiers.
            Qualifiers allow you to limit your search to specific areas of
            GitHub. The REST API supports the same qualifiers as GitHub.com. To
            learn more about the format of the query, see [Constructing a search
            query](https://docs.github.com/rest/reference/search#constructing-a-search-query).
            See "[Searching for
            repositories](https://help.github.com/articles/searching-for-repositories/)"
            for a detailed list of qualifiers.
          in: query
          name: q
          required: true
          schema:
            type: string
        - description: "Sorts the results of your query by number of `stars`, `forks`, or
            `help-wanted-issues` or how recently the items were `updated`.
            Default: [best
            match](https://docs.github.com/rest/reference/search#ranking-search\
            -results)"
          in: query
          name: sort
          required: false
          schema:
            enum:
              - stars
              - forks
              - help-wanted-issues
              - updated
            type: string
        - $ref: "#/components/parameters/order"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/repo-search-result-item-paginated"
              schema:
                properties:
                  incomplete_results:
                    type: boolean
                  items:
                    items:
                      $ref: "#/components/schemas/repo-search-result-item"
                    type: array
                  total_count:
                    type: integer
                required:
                  - total_count
                  - incomplete_results
                  - items
                type: object
          description: response
        "304":
          $ref: "#/components/responses/not_modified"
        "422":
          $ref: "#/components/responses/validation_failed"
        "503":
          $ref: "#/components/responses/service_unavailable"
      summary: Search repositories
      tags:
        - search
      x-github:
        category: search
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: mercy
            note: >-
              The `topics` property for repositories on GitHub is currently available
              for developers to preview. To view the `topics` property in calls
              that return repository results, you must provide a custom [media
              type](https://docs.github.com/rest/overview/media-types) in the
              `Accept` header:

              ```shell

              application/vnd.github.mercy-preview+json

              ```
            required: false
        subcategory: null
  /search/topics:
    get:
      description: >-
        Find topics via various criteria. Results are sorted by best match.
        This method returns up to 100 results [per
        page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).
        See "[Searching
        topics](https://help.github.com/articles/searching-topics/)" for a
        detailed list of qualifiers.


        When searching for topics, you can get text match metadata for the topic's **short\_description**, **description**, **name**, or **display\_name** field when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).


        For example, if you want to search for topics related to Ruby that are featured on https://github.com/topics. Your query might look like this:


        `q=ruby+is:featured`


        This query searches for topics with the keyword `ruby` and limits the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/search/#search-topics
      operationId: search/topics
      parameters:
        - description: The query contains one or more search keywords and qualifiers.
            Qualifiers allow you to limit your search to specific areas of
            GitHub. The REST API supports the same qualifiers as GitHub.com. To
            learn more about the format of the query, see [Constructing a search
            query](https://docs.github.com/rest/reference/search#constructing-a-search-query).
          in: query
          name: q
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/topic-search-result-item-paginated"
              schema:
                properties:
                  incomplete_results:
                    type: boolean
                  items:
                    items:
                      $ref: "#/components/schemas/topic-search-result-item"
                    type: array
                  total_count:
                    type: integer
                required:
                  - total_count
                  - incomplete_results
                  - items
                type: object
          description: response
        "304":
          $ref: "#/components/responses/not_modified"
        "415":
          $ref: "#/components/responses/preview_header_missing"
      summary: Search topics
      tags:
        - search
      x-github:
        category: search
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews:
          - name: mercy
            note: >-
              The `topics` property for repositories on GitHub is currently available
              for developers to preview. To view the `topics` property in calls
              that return repository results, you must provide a custom [media
              type](https://docs.github.com/rest/overview/media-types) in the
              `Accept` header:

              ```shell

              application/vnd.github.mercy-preview+json

              ```
            required: true
        subcategory: null
  /search/users:
    get:
      description: >-
        Find users via various criteria. This method returns up to 100
        results [per
        page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).


        When searching for users, you can get text match metadata for the issue **login**, **email**, and **name** fields when you pass the `text-match` media type. For more details about highlighting search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata). For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).


        For example, if you're looking for a list of popular users, you might try this query:


        `q=tom+repos:%3E42+followers:%3E1000`


        This query searches for users with the name `tom`. The results are restricted to users with more than 42 repositories and over 1,000 followers.
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/search/#search-users
      operationId: search/users
      parameters:
        - description: The query contains one or more search keywords and qualifiers.
            Qualifiers allow you to limit your search to specific areas of
            GitHub. The REST API supports the same qualifiers as GitHub.com. To
            learn more about the format of the query, see [Constructing a search
            query](https://docs.github.com/rest/reference/search#constructing-a-search-query).
            See "[Searching
            users](https://help.github.com/articles/searching-users/)" for a
            detailed list of qualifiers.
          in: query
          name: q
          required: true
          schema:
            type: string
        - description: "Sorts the results of your query by number of `followers` or
            `repositories`, or when the person `joined` GitHub. Default: [best
            match](https://docs.github.com/rest/reference/search#ranking-search\
            -results)"
          in: query
          name: sort
          required: false
          schema:
            enum:
              - followers
              - repositories
              - joined
            type: string
        - $ref: "#/components/parameters/order"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  $ref: "#/components/examples/user-search-result-item-paginated"
              schema:
                properties:
                  incomplete_results:
                    type: boolean
                  items:
                    items:
                      $ref: "#/components/schemas/user-search-result-item"
                    type: array
                  total_count:
                    type: integer
                required:
                  - total_count
                  - incomplete_results
                  - items
                type: object
          description: response
        "304":
          $ref: "#/components/responses/not_modified"
        "422":
          $ref: "#/components/responses/validation_failed"
        "503":
          $ref: "#/components/responses/service_unavailable"
      summary: Search users
      tags:
        - search
      x-github:
        category: search
        enabledForGitHubApps: true
        githubCloudOnly: false
        previews: []
        subcategory: null
components:
  parameters:
    order:
      description: Determines whether the first search result returned is the highest
        number of matches (`desc`) or lowest number of matches (`asc`). This
        parameter is ignored unless you provide `sort`.
      in: query
      name: order
      required: false
      schema:
        default: desc
        enum:
          - desc
          - asc
        type: string
    page:
      description: Page number of the results to fetch.
      in: query
      name: page
      schema:
        default: 1
        type: integer
    per_page:
      description: Results per page (max 100).
      in: query
      name: per_page
      schema:
        default: 30
        type: integer
  responses:
    forbidden:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/basic-error"
      description: Forbidden
    not_found:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/basic-error"
      description: Resource Not Found
    not_modified:
      description: Not Modified
    preview_header_missing:
      content:
        application/json:
          schema:
            properties:
              documentation_url:
                type: string
              message:
                type: string
            required:
              - message
              - documentation_url
            type: object
      description: Preview Header Missing
    service_unavailable:
      content:
        application/json:
          schema:
            properties:
              code:
                type: string
              documentation_url:
                type: string
              message:
                type: string
            type: object
      description: Service Unavailable
    validation_failed:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/validation-error"
      description: Validation Failed
  schemas:
    author_association:
      description: How the author is associated with the repository.
      enum:
        - COLLABORATOR
        - CONTRIBUTOR
        - FIRST_TIMER
        - FIRST_TIME_CONTRIBUTOR
        - MANNEQUIN
        - MEMBER
        - NONE
        - OWNER
      example: OWNER
      title: author_association
      type: string
    basic-error:
      description: Basic Error
      properties:
        documentation_url:
          type: string
        message:
          type: string
      title: Basic Error
      type: object
    code-search-result-item:
      description: Code Search Result Item
      properties:
        file_size:
          type: integer
        git_url:
          format: uri
          type: string
        html_url:
          format: uri
          type: string
        language:
          nullable: true
          type: string
        last_modified_at:
          format: date-time
          type: string
        line_numbers:
          example:
            - 73..77
            - 77..78
          items:
            type: string
          type: array
        name:
          type: string
        path:
          type: string
        repository:
          $ref: "#/components/schemas/minimal-repository"
        score:
          type: integer
        sha:
          type: string
        text_matches:
          $ref: "#/components/schemas/search-result-text-matches"
        url:
          format: uri
          type: string
      required:
        - score
        - name
        - path
        - sha
        - git_url
        - html_url
        - url
        - repository
      title: Code Search Result Item
      type: object
    commit-search-result-item:
      description: Commit Search Result Item
      properties:
        author:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        comments_url:
          format: uri
          type: string
        commit:
          properties:
            author:
              properties:
                date:
                  format: date-time
                  type: string
                email:
                  type: string
                name:
                  type: string
              required:
                - name
                - email
                - date
              type: object
            comment_count:
              type: integer
            committer:
              allOf:
                - $ref: "#/components/schemas/git-user"
              nullable: true
            message:
              type: string
            tree:
              properties:
                sha:
                  type: string
                url:
                  format: uri
                  type: string
              required:
                - sha
                - url
              type: object
            url:
              format: uri
              type: string
            verification:
              $ref: "#/components/schemas/verification"
          required:
            - author
            - committer
            - comment_count
            - message
            - tree
            - url
          type: object
        committer:
          allOf:
            - $ref: "#/components/schemas/git-user"
          nullable: true
        html_url:
          format: uri
          type: string
        node_id:
          type: string
        parents:
          items:
            properties:
              html_url:
                type: string
              sha:
                type: string
              url:
                type: string
            type: object
          type: array
        repository:
          $ref: "#/components/schemas/minimal-repository"
        score:
          type: integer
        sha:
          type: string
        text_matches:
          $ref: "#/components/schemas/search-result-text-matches"
        url:
          format: uri
          type: string
      required:
        - sha
        - node_id
        - url
        - html_url
        - author
        - committer
        - parents
        - comments_url
        - commit
        - repository
        - score
      title: Commit Search Result Item
      type: object
    git-user:
      description: Metaproperties for Git author/committer information.
      properties:
        date:
          example: '"2007-10-29T02:42:39.000-07:00"'
          type: string
        email:
          example: '"chris@ozmm.org"'
          type: string
        name:
          example: '"Chris Wanstrath"'
          type: string
      title: Git User
      type: object
    integration:
      additionalProperties: true
      description: GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
      properties:
        client_id:
          example: '"Iv1.25b5d1e65ffc4022"'
          type: string
        client_secret:
          example: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
          type: string
        created_at:
          example: 2017-07-08T16:18:44-04:00
          format: date-time
          type: string
        description:
          example: The description of the app.
          nullable: true
          type: string
        events:
          description: The list of events for the GitHub app
          example:
            - label
            - deployment
          items:
            type: string
          type: array
        external_url:
          example: https://example.com
          format: uri
          type: string
        html_url:
          example: https://github.com/apps/super-ci
          format: uri
          type: string
        id:
          description: Unique identifier of the GitHub app
          example: 37
          type: integer
        installations_count:
          description: The number of installations associated with the GitHub app
          example: 5
          type: integer
        name:
          description: The name of the GitHub app
          example: Probot Owners
          type: string
        node_id:
          example: MDExOkludGVncmF0aW9uMQ==
          type: string
        owner:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        pem:
          example: '"-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n"'
          type: string
        permissions:
          additionalProperties:
            type: string
          description: The set of permissions for the GitHub app
          example:
            deployments: write
            issues: read
          properties:
            checks:
              type: string
            contents:
              type: string
            deployments:
              type: string
            issues:
              type: string
            metadata:
              type: string
          type: object
        slug:
          description: The slug name of the GitHub app
          example: probot-owners
          type: string
        updated_at:
          example: 2017-07-08T16:18:44-04:00
          format: date-time
          type: string
        webhook_secret:
          example: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
          type: string
      required:
        - id
        - node_id
        - owner
        - name
        - description
        - external_url
        - html_url
        - created_at
        - updated_at
        - permissions
        - events
      title: GitHub app
      type: object
    issue-search-result-item:
      description: Issue Search Result Item
      properties:
        active_lock_reason:
          nullable: true
          type: string
        assignee:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        assignees:
          items:
            $ref: "#/components/schemas/simple-user"
          nullable: true
          type: array
        author_association:
          $ref: "#/components/schemas/author_association"
        body:
          type: string
        body_html:
          type: string
        body_text:
          type: string
        closed_at:
          format: date-time
          nullable: true
          type: string
        comments:
          type: integer
        comments_url:
          format: uri
          type: string
        created_at:
          format: date-time
          type: string
        draft:
          type: boolean
        events_url:
          format: uri
          type: string
        html_url:
          format: uri
          type: string
        id:
          type: integer
        labels:
          items:
            properties:
              color:
                type: string
              default:
                type: boolean
              description:
                nullable: true
                type: string
              id:
                type: integer
              name:
                type: string
              node_id:
                type: string
              url:
                type: string
            type: object
          type: array
        labels_url:
          type: string
        locked:
          type: boolean
        milestone:
          allOf:
            - $ref: "#/components/schemas/milestone"
          nullable: true
        node_id:
          type: string
        number:
          type: integer
        performed_via_github_app:
          allOf:
            - $ref: "#/components/schemas/integration"
          nullable: true
        pull_request:
          properties:
            diff_url:
              format: uri
              nullable: true
              type: string
            html_url:
              format: uri
              nullable: true
              type: string
            merged_at:
              format: date-time
              nullable: true
              type: string
            patch_url:
              format: uri
              nullable: true
              type: string
            url:
              format: uri
              nullable: true
              type: string
          required:
            - diff_url
            - html_url
            - patch_url
            - url
          type: object
        repository:
          $ref: "#/components/schemas/repository"
        repository_url:
          format: uri
          type: string
        score:
          type: integer
        state:
          type: string
        text_matches:
          $ref: "#/components/schemas/search-result-text-matches"
        timeline_url:
          format: uri
          type: string
        title:
          type: string
        updated_at:
          format: date-time
          type: string
        url:
          format: uri
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
      required:
        - assignee
        - closed_at
        - comments
        - comments_url
        - events_url
        - html_url
        - id
        - node_id
        - labels
        - labels_url
        - milestone
        - number
        - repository_url
        - state
        - locked
        - title
        - url
        - user
        - author_association
        - created_at
        - updated_at
        - score
      title: Issue Search Result Item
      type: object
    label-search-result-item:
      description: Label Search Result Item
      properties:
        color:
          type: string
        default:
          type: boolean
        description:
          nullable: true
          type: string
        id:
          type: integer
        name:
          type: string
        node_id:
          type: string
        score:
          type: integer
        text_matches:
          $ref: "#/components/schemas/search-result-text-matches"
        url:
          format: uri
          type: string
      required:
        - id
        - node_id
        - url
        - name
        - color
        - default
        - description
        - score
      title: Label Search Result Item
      type: object
    license-simple:
      description: License Simple
      properties:
        html_url:
          format: uri
          type: string
        key:
          example: mit
          type: string
        name:
          example: MIT License
          type: string
        node_id:
          example: MDc6TGljZW5zZW1pdA==
          type: string
        spdx_id:
          example: MIT
          nullable: true
          type: string
        url:
          example: https://api.github.com/licenses/mit
          format: uri
          nullable: true
          type: string
      required:
        - key
        - name
        - url
        - spdx_id
        - node_id
      title: License Simple
      type: object
    milestone:
      description: A collection of related issues and pull requests.
      properties:
        closed_at:
          example: 2013-02-12T13:22:01Z
          format: date-time
          nullable: true
          type: string
        closed_issues:
          example: 8
          type: integer
        created_at:
          example: 2011-04-10T20:09:31Z
          format: date-time
          type: string
        creator:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        description:
          example: Tracking milestone for version 1.0
          nullable: true
          type: string
        due_on:
          example: 2012-10-09T23:39:01Z
          format: date-time
          nullable: true
          type: string
        html_url:
          example: https://github.com/octocat/Hello-World/milestones/v1.0
          format: uri
          type: string
        id:
          example: 1002604
          type: integer
        labels_url:
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          format: uri
          type: string
        node_id:
          example: MDk6TWlsZXN0b25lMTAwMjYwNA==
          type: string
        number:
          description: The number of the milestone.
          example: 42
          type: integer
        open_issues:
          example: 4
          type: integer
        state:
          default: open
          description: The state of the milestone.
          enum:
            - open
            - closed
          example: open
          type: string
        title:
          description: The title of the milestone.
          example: v1.0
          type: string
        updated_at:
          example: 2014-03-03T18:58:10Z
          format: date-time
          type: string
        url:
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1
          format: uri
          type: string
      required:
        - closed_issues
        - creator
        - description
        - due_on
        - closed_at
        - id
        - node_id
        - labels_url
        - html_url
        - number
        - open_issues
        - state
        - title
        - url
        - created_at
        - updated_at
      title: Milestone
      type: object
    minimal-repository:
      description: Minimal Repository
      properties:
        archive_url:
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          type: string
        archived:
          type: boolean
        assignees_url:
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
          type: string
        blobs_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          type: string
        branches_url:
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
          type: string
        clone_url:
          type: string
        collaborators_url:
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          type: string
        comments_url:
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
          type: string
        commits_url:
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
          type: string
        compare_url:
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          type: string
        contents_url:
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
          type: string
        contributors_url:
          example: http://api.github.com/repos/octocat/Hello-World/contributors
          format: uri
          type: string
        created_at:
          example: 2011-01-26T19:01:12Z
          format: date-time
          nullable: true
          type: string
        default_branch:
          type: string
        delete_branch_on_merge:
          type: boolean
        deployments_url:
          example: http://api.github.com/repos/octocat/Hello-World/deployments
          format: uri
          type: string
        description:
          example: This your first repo!
          nullable: true
          type: string
        disabled:
          type: boolean
        downloads_url:
          example: http://api.github.com/repos/octocat/Hello-World/downloads
          format: uri
          type: string
        events_url:
          example: http://api.github.com/repos/octocat/Hello-World/events
          format: uri
          type: string
        fork:
          type: boolean
        forks:
          example: 0
          type: integer
        forks_count:
          type: integer
        forks_url:
          example: http://api.github.com/repos/octocat/Hello-World/forks
          format: uri
          type: string
        full_name:
          example: octocat/Hello-World
          type: string
        git_commits_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          type: string
        git_refs_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          type: string
        git_tags_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          type: string
        git_url:
          type: string
        has_downloads:
          type: boolean
        has_issues:
          type: boolean
        has_pages:
          type: boolean
        has_projects:
          type: boolean
        has_wiki:
          type: boolean
        homepage:
          nullable: true
          type: string
        hooks_url:
          example: http://api.github.com/repos/octocat/Hello-World/hooks
          format: uri
          type: string
        html_url:
          example: https://github.com/octocat/Hello-World
          format: uri
          type: string
        id:
          example: 1296269
          type: integer
        is_template:
          type: boolean
        issue_comment_url:
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          type: string
        issue_events_url:
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          type: string
        issues_url:
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
          type: string
        keys_url:
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          type: string
        labels_url:
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
          type: string
        language:
          nullable: true
          type: string
        languages_url:
          example: http://api.github.com/repos/octocat/Hello-World/languages
          format: uri
          type: string
        license:
          nullable: true
          properties:
            key:
              type: string
            name:
              type: string
            node_id:
              type: string
            spdx_id:
              type: string
            url:
              type: string
          type: object
        merges_url:
          example: http://api.github.com/repos/octocat/Hello-World/merges
          format: uri
          type: string
        milestones_url:
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
          type: string
        mirror_url:
          nullable: true
          type: string
        name:
          example: Hello-World
          type: string
        network_count:
          type: integer
        node_id:
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          type: string
        notifications_url:
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          type: string
        open_issues:
          example: 0
          type: integer
        open_issues_count:
          type: integer
        owner:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
          type: object
        permissions:
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            push:
              type: boolean
          type: object
        private:
          type: boolean
        pulls_url:
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
          type: string
        pushed_at:
          example: 2011-01-26T19:06:43Z
          format: date-time
          nullable: true
          type: string
        releases_url:
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
          type: string
        size:
          type: integer
        ssh_url:
          type: string
        stargazers_count:
          type: integer
        stargazers_url:
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
          format: uri
          type: string
        statuses_url:
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          type: string
        subscribers_count:
          type: integer
        subscribers_url:
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
          format: uri
          type: string
        subscription_url:
          example: http://api.github.com/repos/octocat/Hello-World/subscription
          format: uri
          type: string
        svn_url:
          type: string
        tags_url:
          example: http://api.github.com/repos/octocat/Hello-World/tags
          format: uri
          type: string
        teams_url:
          example: http://api.github.com/repos/octocat/Hello-World/teams
          format: uri
          type: string
        temp_clone_token:
          type: string
        template_repository:
          allOf:
            - $ref: "#/components/schemas/repository"
          nullable: true
          type: object
        topics:
          items:
            type: string
          type: array
        trees_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          type: string
        updated_at:
          example: 2011-01-26T19:14:43Z
          format: date-time
          nullable: true
          type: string
        url:
          example: https://api.github.com/repos/octocat/Hello-World
          format: uri
          type: string
        visibility:
          type: string
        watchers:
          example: 0
          type: integer
        watchers_count:
          type: integer
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
      title: Minimal Repository
      type: object
    repo-search-result-item:
      description: Repo Search Result Item
      properties:
        allow_merge_commit:
          type: boolean
        allow_rebase_merge:
          type: boolean
        allow_squash_merge:
          type: boolean
        archive_url:
          type: string
        archived:
          type: boolean
        assignees_url:
          type: string
        blobs_url:
          type: string
        branches_url:
          type: string
        clone_url:
          type: string
        collaborators_url:
          type: string
        comments_url:
          type: string
        commits_url:
          type: string
        compare_url:
          type: string
        contents_url:
          type: string
        contributors_url:
          format: uri
          type: string
        created_at:
          format: date-time
          type: string
        default_branch:
          type: string
        delete_branch_on_merge:
          type: boolean
        deployments_url:
          format: uri
          type: string
        description:
          nullable: true
          type: string
        disabled:
          description: Returns whether or not this repository disabled.
          type: boolean
        downloads_url:
          format: uri
          type: string
        events_url:
          format: uri
          type: string
        fork:
          type: boolean
        forks:
          type: integer
        forks_count:
          type: integer
        forks_url:
          format: uri
          type: string
        full_name:
          type: string
        git_commits_url:
          type: string
        git_refs_url:
          type: string
        git_tags_url:
          type: string
        git_url:
          type: string
        has_downloads:
          type: boolean
        has_issues:
          type: boolean
        has_pages:
          type: boolean
        has_projects:
          type: boolean
        has_wiki:
          type: boolean
        homepage:
          format: uri
          nullable: true
          type: string
        hooks_url:
          format: uri
          type: string
        html_url:
          format: uri
          type: string
        id:
          type: integer
        issue_comment_url:
          type: string
        issue_events_url:
          type: string
        issues_url:
          type: string
        keys_url:
          type: string
        labels_url:
          type: string
        language:
          nullable: true
          type: string
        languages_url:
          format: uri
          type: string
        license:
          allOf:
            - $ref: "#/components/schemas/license-simple"
          nullable: true
        master_branch:
          type: string
        merges_url:
          format: uri
          type: string
        milestones_url:
          type: string
        mirror_url:
          format: uri
          nullable: true
          type: string
        name:
          type: string
        node_id:
          type: string
        notifications_url:
          type: string
        open_issues:
          type: integer
        open_issues_count:
          type: integer
        owner:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        permissions:
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            push:
              type: boolean
          required:
            - admin
            - pull
            - push
          type: object
        private:
          type: boolean
        pulls_url:
          type: string
        pushed_at:
          format: date-time
          type: string
        releases_url:
          type: string
        score:
          type: integer
        size:
          type: integer
        ssh_url:
          type: string
        stargazers_count:
          type: integer
        stargazers_url:
          format: uri
          type: string
        statuses_url:
          type: string
        subscribers_url:
          format: uri
          type: string
        subscription_url:
          format: uri
          type: string
        svn_url:
          format: uri
          type: string
        tags_url:
          format: uri
          type: string
        teams_url:
          format: uri
          type: string
        temp_clone_token:
          type: string
        text_matches:
          $ref: "#/components/schemas/search-result-text-matches"
        topics:
          items:
            type: string
          type: array
        trees_url:
          type: string
        updated_at:
          format: date-time
          type: string
        url:
          format: uri
          type: string
        watchers:
          type: integer
        watchers_count:
          type: integer
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
        - clone_url
        - default_branch
        - forks
        - forks_count
        - git_url
        - has_downloads
        - has_issues
        - has_projects
        - has_wiki
        - has_pages
        - homepage
        - language
        - archived
        - disabled
        - mirror_url
        - open_issues
        - open_issues_count
        - license
        - pushed_at
        - size
        - ssh_url
        - stargazers_count
        - svn_url
        - watchers
        - watchers_count
        - created_at
        - updated_at
        - score
      title: Repo Search Result Item
      type: object
    repository:
      description: A git repository
      properties:
        allow_merge_commit:
          default: true
          description: Whether to allow merge commits for pull requests.
          example: true
          type: boolean
        allow_rebase_merge:
          default: true
          description: Whether to allow rebase merges for pull requests.
          example: true
          type: boolean
        allow_squash_merge:
          default: true
          description: Whether to allow squash merges for pull requests.
          example: true
          type: boolean
        archive_url:
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          type: string
        archived:
          default: false
          description: Whether the repository is archived.
          type: boolean
        assignees_url:
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
          type: string
        blobs_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          type: string
        branches_url:
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
          type: string
        clone_url:
          example: https://github.com/octocat/Hello-World.git
          type: string
        collaborators_url:
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          type: string
        comments_url:
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
          type: string
        commits_url:
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
          type: string
        compare_url:
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          type: string
        contents_url:
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
          type: string
        contributors_url:
          example: http://api.github.com/repos/octocat/Hello-World/contributors
          format: uri
          type: string
        created_at:
          example: 2011-01-26T19:01:12Z
          format: date-time
          nullable: true
          type: string
        default_branch:
          description: The default branch of the repository.
          example: master
          type: string
        delete_branch_on_merge:
          default: false
          description: Whether to delete head branches when pull requests are merged
          example: false
          type: boolean
        deployments_url:
          example: http://api.github.com/repos/octocat/Hello-World/deployments
          format: uri
          type: string
        description:
          example: This your first repo!
          nullable: true
          type: string
        disabled:
          description: Returns whether or not this repository disabled.
          type: boolean
        downloads_url:
          example: http://api.github.com/repos/octocat/Hello-World/downloads
          format: uri
          type: string
        events_url:
          example: http://api.github.com/repos/octocat/Hello-World/events
          format: uri
          type: string
        fork:
          type: boolean
        forks:
          type: integer
        forks_count:
          example: 9
          type: integer
        forks_url:
          example: http://api.github.com/repos/octocat/Hello-World/forks
          format: uri
          type: string
        full_name:
          example: octocat/Hello-World
          type: string
        git_commits_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          type: string
        git_refs_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          type: string
        git_tags_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          type: string
        git_url:
          example: git:github.com/octocat/Hello-World.git
          type: string
        has_downloads:
          default: true
          description: Whether downloads are enabled.
          example: true
          type: boolean
        has_issues:
          default: true
          description: Whether issues are enabled.
          example: true
          type: boolean
        has_pages:
          type: boolean
        has_projects:
          default: true
          description: Whether projects are enabled.
          example: true
          type: boolean
        has_wiki:
          default: true
          description: Whether the wiki is enabled.
          example: true
          type: boolean
        homepage:
          example: https://github.com
          format: uri
          nullable: true
          type: string
        hooks_url:
          example: http://api.github.com/repos/octocat/Hello-World/hooks
          format: uri
          type: string
        html_url:
          example: https://github.com/octocat/Hello-World
          format: uri
          type: string
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
        is_template:
          default: false
          description: Whether this repository acts as a template that can be used to generate new repositories.
          example: true
          type: boolean
        issue_comment_url:
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          type: string
        issue_events_url:
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          type: string
        issues_url:
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
          type: string
        keys_url:
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          type: string
        labels_url:
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
          type: string
        language:
          nullable: true
          type: string
        languages_url:
          example: http://api.github.com/repos/octocat/Hello-World/languages
          format: uri
          type: string
        license:
          allOf:
            - $ref: "#/components/schemas/license-simple"
          nullable: true
        master_branch:
          type: string
        merges_url:
          example: http://api.github.com/repos/octocat/Hello-World/merges
          format: uri
          type: string
        milestones_url:
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
          type: string
        mirror_url:
          example: git:git.example.com/octocat/Hello-World
          format: uri
          nullable: true
          type: string
        name:
          description: The name of the repository.
          example: Team Environment
          type: string
        network_count:
          type: integer
        node_id:
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          type: string
        notifications_url:
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          type: string
        open_issues:
          type: integer
        open_issues_count:
          example: 0
          type: integer
        owner:
          allOf:
            - $ref: "#/components/schemas/simple-user"
          nullable: true
        permissions:
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            pull:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
          required:
            - admin
            - pull
            - push
          type: object
        private:
          default: false
          description: Whether the repository is private or public.
          type: boolean
        pulls_url:
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
          type: string
        pushed_at:
          example: 2011-01-26T19:06:43Z
          format: date-time
          nullable: true
          type: string
        releases_url:
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
          type: string
        size:
          example: 108
          type: integer
        ssh_url:
          example: git@github.com:octocat/Hello-World.git
          type: string
        stargazers_count:
          example: 80
          type: integer
        stargazers_url:
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
          format: uri
          type: string
        starred_at:
          example: '"2020-07-09T00:17:42Z"'
          type: string
        statuses_url:
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          type: string
        subscribers_count:
          type: integer
        subscribers_url:
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
          format: uri
          type: string
        subscription_url:
          example: http://api.github.com/repos/octocat/Hello-World/subscription
          format: uri
          type: string
        svn_url:
          example: https://svn.github.com/octocat/Hello-World
          format: uri
          type: string
        tags_url:
          example: http://api.github.com/repos/octocat/Hello-World/tags
          format: uri
          type: string
        teams_url:
          example: http://api.github.com/repos/octocat/Hello-World/teams
          format: uri
          type: string
        temp_clone_token:
          type: string
        template_repository:
          nullable: true
          properties:
            allow_merge_commit:
              type: boolean
            allow_rebase_merge:
              type: boolean
            allow_squash_merge:
              type: boolean
            archive_url:
              type: string
            archived:
              type: boolean
            assignees_url:
              type: string
            blobs_url:
              type: string
            branches_url:
              type: string
            clone_url:
              type: string
            collaborators_url:
              type: string
            comments_url:
              type: string
            commits_url:
              type: string
            compare_url:
              type: string
            contents_url:
              type: string
            contributors_url:
              type: string
            created_at:
              type: string
            default_branch:
              type: string
            delete_branch_on_merge:
              type: boolean
            deployments_url:
              type: string
            description:
              type: string
            disabled:
              type: boolean
            downloads_url:
              type: string
            events_url:
              type: string
            fork:
              type: boolean
            forks_count:
              type: integer
            forks_url:
              type: string
            full_name:
              type: string
            git_commits_url:
              type: string
            git_refs_url:
              type: string
            git_tags_url:
              type: string
            git_url:
              type: string
            has_downloads:
              type: boolean
            has_issues:
              type: boolean
            has_pages:
              type: boolean
            has_projects:
              type: boolean
            has_wiki:
              type: boolean
            homepage:
              type: string
            hooks_url:
              type: string
            html_url:
              type: string
            id:
              type: integer
            is_template:
              type: boolean
            issue_comment_url:
              type: string
            issue_events_url:
              type: string
            issues_url:
              type: string
            keys_url:
              type: string
            labels_url:
              type: string
            language:
              type: string
            languages_url:
              type: string
            merges_url:
              type: string
            milestones_url:
              type: string
            mirror_url:
              type: string
            name:
              type: string
            network_count:
              type: integer
            node_id:
              type: string
            notifications_url:
              type: string
            open_issues_count:
              type: integer
            owner:
              properties:
                avatar_url:
                  type: string
                events_url:
                  type: string
                followers_url:
                  type: string
                following_url:
                  type: string
                gists_url:
                  type: string
                gravatar_id:
                  type: string
                html_url:
                  type: string
                id:
                  type: integer
                login:
                  type: string
                node_id:
                  type: string
                organizations_url:
                  type: string
                received_events_url:
                  type: string
                repos_url:
                  type: string
                site_admin:
                  type: boolean
                starred_url:
                  type: string
                subscriptions_url:
                  type: string
                type:
                  type: string
                url:
                  type: string
              type: object
            permissions:
              properties:
                admin:
                  type: boolean
                pull:
                  type: boolean
                push:
                  type: boolean
              type: object
            private:
              type: boolean
            pulls_url:
              type: string
            pushed_at:
              type: string
            releases_url:
              type: string
            size:
              type: integer
            ssh_url:
              type: string
            stargazers_count:
              type: integer
            stargazers_url:
              type: string
            statuses_url:
              type: string
            subscribers_count:
              type: integer
            subscribers_url:
              type: string
            subscription_url:
              type: string
            svn_url:
              type: string
            tags_url:
              type: string
            teams_url:
              type: string
            temp_clone_token:
              type: string
            topics:
              items:
                type: string
              type: array
            trees_url:
              type: string
            updated_at:
              type: string
            url:
              type: string
            visibility:
              type: string
            watchers_count:
              type: integer
          type: object
        topics:
          items:
            type: string
          type: array
        trees_url:
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          type: string
        updated_at:
          example: 2011-01-26T19:14:43Z
          format: date-time
          nullable: true
          type: string
        url:
          example: https://api.github.com/repos/octocat/Hello-World
          format: uri
          type: string
        visibility:
          default: public
          description: "The repository visibility: public, private, or internal."
          type: string
        watchers:
          type: integer
        watchers_count:
          example: 80
          type: integer
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
        - clone_url
        - default_branch
        - forks
        - forks_count
        - git_url
        - has_downloads
        - has_issues
        - has_projects
        - has_wiki
        - has_pages
        - homepage
        - language
        - archived
        - disabled
        - mirror_url
        - open_issues
        - open_issues_count
        - license
        - pushed_at
        - size
        - ssh_url
        - stargazers_count
        - svn_url
        - watchers
        - watchers_count
        - created_at
        - updated_at
      title: Repository
      type: object
    search-result-text-matches:
      items:
        properties:
          fragment:
            type: string
          matches:
            items:
              properties:
                indices:
                  items:
                    type: integer
                  type: array
                text:
                  type: string
              type: object
            type: array
          object_type:
            nullable: true
            type: string
          object_url:
            type: string
          property:
            type: string
        type: object
      title: Search Result Text Matches
      type: array
    simple-user:
      description: Simple User
      nullable: true
      properties:
        avatar_url:
          example: https://github.com/images/error/octocat_happy.gif
          format: uri
          type: string
        events_url:
          example: https://api.github.com/users/octocat/events{/privacy}
          type: string
        followers_url:
          example: https://api.github.com/users/octocat/followers
          format: uri
          type: string
        following_url:
          example: https://api.github.com/users/octocat/following{/other_user}
          type: string
        gists_url:
          example: https://api.github.com/users/octocat/gists{/gist_id}
          type: string
        gravatar_id:
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
          type: string
        html_url:
          example: https://github.com/octocat
          format: uri
          type: string
        id:
          example: 1
          type: integer
        login:
          example: octocat
          type: string
        node_id:
          example: MDQ6VXNlcjE=
          type: string
        organizations_url:
          example: https://api.github.com/users/octocat/orgs
          format: uri
          type: string
        received_events_url:
          example: https://api.github.com/users/octocat/received_events
          format: uri
          type: string
        repos_url:
          example: https://api.github.com/users/octocat/repos
          format: uri
          type: string
        site_admin:
          type: boolean
        starred_at:
          example: '"2020-07-09T00:17:55Z"'
          type: string
        starred_url:
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
          type: string
        subscriptions_url:
          example: https://api.github.com/users/octocat/subscriptions
          format: uri
          type: string
        type:
          example: User
          type: string
        url:
          example: https://api.github.com/users/octocat
          format: uri
          type: string
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
      title: Simple User
      type: object
    topic-search-result-item:
      description: Topic Search Result Item
      properties:
        aliases:
          items:
            properties:
              topic_relation:
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  relation_type:
                    type: string
                  topic_id:
                    type: integer
                type: object
            type: object
          nullable: true
          type: array
        created_at:
          format: date-time
          type: string
        created_by:
          nullable: true
          type: string
        curated:
          type: boolean
        description:
          nullable: true
          type: string
        display_name:
          nullable: true
          type: string
        featured:
          type: boolean
        logo_url:
          format: uri
          nullable: true
          type: string
        name:
          type: string
        related:
          items:
            properties:
              topic_relation:
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  relation_type:
                    type: string
                  topic_id:
                    type: integer
                type: object
            type: object
          nullable: true
          type: array
        released:
          nullable: true
          type: string
        repository_count:
          nullable: true
          type: integer
        score:
          type: integer
        short_description:
          nullable: true
          type: string
        text_matches:
          $ref: "#/components/schemas/search-result-text-matches"
        updated_at:
          format: date-time
          type: string
      required:
        - name
        - display_name
        - short_description
        - description
        - created_by
        - released
        - created_at
        - updated_at
        - featured
        - curated
        - score
      title: Topic Search Result Item
      type: object
    user-search-result-item:
      description: User Search Result Item
      properties:
        avatar_url:
          format: uri
          type: string
        bio:
          nullable: true
          type: string
        blog:
          nullable: true
          type: string
        company:
          nullable: true
          type: string
        created_at:
          format: date-time
          type: string
        email:
          format: email
          nullable: true
          type: string
        events_url:
          type: string
        followers:
          type: integer
        followers_url:
          format: uri
          type: string
        following:
          type: integer
        following_url:
          type: string
        gists_url:
          type: string
        gravatar_id:
          nullable: true
          type: string
        hireable:
          nullable: true
          type: boolean
        html_url:
          format: uri
          type: string
        id:
          type: integer
        location:
          nullable: true
          type: string
        login:
          type: string
        name:
          nullable: true
          type: string
        node_id:
          type: string
        organizations_url:
          format: uri
          type: string
        public_gists:
          type: integer
        public_repos:
          type: integer
        received_events_url:
          format: uri
          type: string
        repos_url:
          format: uri
          type: string
        score:
          type: integer
        site_admin:
          type: boolean
        starred_url:
          type: string
        subscriptions_url:
          format: uri
          type: string
        suspended_at:
          format: date-time
          nullable: true
          type: string
        text_matches:
          $ref: "#/components/schemas/search-result-text-matches"
        type:
          type: string
        updated_at:
          format: date-time
          type: string
        url:
          format: uri
          type: string
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
        - score
      title: User Search Result Item
      type: object
    validation-error:
      description: Validation Error
      properties:
        documentation_url:
          type: string
        errors:
          items:
            properties:
              code:
                type: string
              field:
                type: string
              index:
                type: integer
              message:
                type: string
              resource:
                type: string
              value:
                oneOf:
                  - nullable: true
                    type: string
                  - nullable: true
                    type: integer
                  - items:
                      type: string
                    nullable: true
                    type: array
            required:
              - code
            type: object
          type: array
        message:
          type: string
      required:
        - message
        - documentation_url
      title: Validation Error
      type: object
    verification:
      properties:
        payload:
          nullable: true
          type: string
        reason:
          type: string
        signature:
          nullable: true
          type: string
        verified:
          type: boolean
      required:
        - verified
        - reason
        - payload
        - signature
      title: Verification
      type: object
  examples:
    code-search-result-item-paginated:
      value:
        incomplete_results: false
        items:
          - git_url: https://api.github.com/repositories/167174/git/blobs/d7212f9dee2dcc18f084d7df8f417b80846ded5a
            html_url: https://github.com/jquery/jquery/blob/825ac3773694e0cd23ee74895fd5aeb535b27da4/src/attributes/classes.js
            name: classes.js
            path: src/attributes/classes.js
            repository:
              archive_url: https://api.github.com/repos/jquery/jquery/{archive_format}{/ref}
              assignees_url: https://api.github.com/repos/jquery/jquery/assignees{/user}
              blobs_url: https://api.github.com/repos/jquery/jquery/git/blobs{/sha}
              branches_url: https://api.github.com/repos/jquery/jquery/branches{/branch}
              collaborators_url: https://api.github.com/repos/jquery/jquery/collaborators{/collaborator}
              comments_url: https://api.github.com/repos/jquery/jquery/comments{/number}
              commits_url: https://api.github.com/repos/jquery/jquery/commits{/sha}
              compare_url: https://api.github.com/repos/jquery/jquery/compare/{base}...{head}
              contents_url: https://api.github.com/repos/jquery/jquery/contents/{+path}
              contributors_url: https://api.github.com/repos/jquery/jquery/contributors
              deployments_url: http://api.github.com/repos/octocat/Hello-World/deployments
              description: jQuery JavaScript Library
              downloads_url: https://api.github.com/repos/jquery/jquery/downloads
              events_url: https://api.github.com/repos/jquery/jquery/events
              fork: false
              forks_url: https://api.github.com/repos/jquery/jquery/forks
              full_name: jquery/jquery
              git_commits_url: https://api.github.com/repos/jquery/jquery/git/commits{/sha}
              git_refs_url: https://api.github.com/repos/jquery/jquery/git/refs{/sha}
              git_tags_url: https://api.github.com/repos/jquery/jquery/git/tags{/sha}
              hooks_url: https://api.github.com/repos/jquery/jquery/hooks
              html_url: https://github.com/jquery/jquery
              id: 167174
              issue_comment_url: https://api.github.com/repos/jquery/jquery/issues/comments/{number}
              issue_events_url: https://api.github.com/repos/jquery/jquery/issues/events{/number}
              issues_url: https://api.github.com/repos/jquery/jquery/issues{/number}
              keys_url: https://api.github.com/repos/jquery/jquery/keys{/key_id}
              labels_url: https://api.github.com/repos/jquery/jquery/labels{/name}
              languages_url: https://api.github.com/repos/jquery/jquery/languages
              merges_url: https://api.github.com/repos/jquery/jquery/merges
              milestones_url: https://api.github.com/repos/jquery/jquery/milestones{/number}
              name: jquery
              node_id: MDEwOlJlcG9zaXRvcnkxNjcxNzQ=
              notifications_url: https://api.github.com/repos/jquery/jquery/notifications{?since,all,participating}
              owner:
                avatar_url: https://0.gravatar.com/avatar/6906f317a4733f4379b06c32229ef02f?d=https%3A%2F%2Fidenticons.github.com%2Ff426f04f2f9813718fb806b30e0093de.png
                events_url: https://api.github.com/users/jquery/events{/privacy}
                followers_url: https://api.github.com/users/jquery/followers
                following_url: https://api.github.com/users/jquery/following{/other_user}
                gists_url: https://api.github.com/users/jquery/gists{/gist_id}
                gravatar_id: ""
                html_url: https://github.com/jquery
                id: 70142
                login: jquery
                node_id: MDQ6VXNlcjcwMTQy
                organizations_url: https://api.github.com/users/jquery/orgs
                received_events_url: https://api.github.com/users/jquery/received_events
                repos_url: https://api.github.com/users/jquery/repos
                site_admin: false
                starred_url: https://api.github.com/users/jquery/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/jquery/subscriptions
                type: Organization
                url: https://api.github.com/users/jquery
              private: false
              pulls_url: https://api.github.com/repos/jquery/jquery/pulls{/number}
              releases_url: http://api.github.com/repos/octocat/Hello-World/releases{/id}
              stargazers_url: https://api.github.com/repos/jquery/jquery/stargazers
              statuses_url: https://api.github.com/repos/jquery/jquery/statuses/{sha}
              subscribers_url: https://api.github.com/repos/jquery/jquery/subscribers
              subscription_url: https://api.github.com/repos/jquery/jquery/subscription
              tags_url: https://api.github.com/repos/jquery/jquery/tags
              teams_url: https://api.github.com/repos/jquery/jquery/teams
              trees_url: https://api.github.com/repos/jquery/jquery/git/trees{/sha}
              url: https://api.github.com/repos/jquery/jquery
            score: 1
            sha: d7212f9dee2dcc18f084d7df8f417b80846ded5a
            url: https://api.github.com/repositories/167174/contents/src/attributes/classes.js?ref=825ac3773694e0cd23ee74895fd5aeb535b27da4
        total_count: 7
    commit-search-result-item-paginated:
      value:
        incomplete_results: false
        items:
          - author:
              avatar_url: https://avatars.githubusercontent.com/u/583231?v=3
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 583231
              login: octocat
              node_id: MDQ6VXNlcjU4MzIzMQ==
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: false
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/octocat
            comments_url: https://api.github.com/repos/octocat/Spoon-Knife/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f/comments
            commit:
              author:
                date: 2014-02-04T14:38:36-08:00
                email: octocat@nowhere.com
                name: The Octocat
              comment_count: 8
              committer:
                date: 2014-02-12T15:18:55-08:00
                email: octocat@nowhere.com
                name: The Octocat
              message: Create styles.css and updated README
              tree:
                sha: a639e96f9038797fba6e0469f94a4b0cc459fa68
                url: https://api.github.com/repos/octocat/Spoon-Knife/git/trees/a639e96f9038797fba6e0469f94a4b0cc459fa68
              url: https://api.github.com/repos/octocat/Spoon-Knife/git/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
            committer: {}
            html_url: https://github.com/octocat/Spoon-Knife/commit/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
            node_id: MDQ6VXNlcjU4MzIzMQ==
            parents:
              - html_url: https://github.com/octocat/Spoon-Knife/commit/a30c19e3f13765a3b48829788bc1cb8b4e95cee4
                sha: a30c19e3f13765a3b48829788bc1cb8b4e95cee4
                url: https://api.github.com/repos/octocat/Spoon-Knife/commits/a30c19e3f13765a3b48829788bc1cb8b4e95cee4
            repository:
              archive_url: https://api.github.com/repos/octocat/Spoon-Knife/{archive_format}{/ref}
              assignees_url: https://api.github.com/repos/octocat/Spoon-Knife/assignees{/user}
              blobs_url: https://api.github.com/repos/octocat/Spoon-Knife/git/blobs{/sha}
              branches_url: https://api.github.com/repos/octocat/Spoon-Knife/branches{/branch}
              collaborators_url: https://api.github.com/repos/octocat/Spoon-Knife/collaborators{/collaborator}
              comments_url: https://api.github.com/repos/octocat/Spoon-Knife/comments{/number}
              commits_url: https://api.github.com/repos/octocat/Spoon-Knife/commits{/sha}
              compare_url: https://api.github.com/repos/octocat/Spoon-Knife/compare/{base}...{head}
              contents_url: https://api.github.com/repos/octocat/Spoon-Knife/contents/{+path}
              contributors_url: https://api.github.com/repos/octocat/Spoon-Knife/contributors
              deployments_url: https://api.github.com/repos/octocat/Spoon-Knife/deployments
              description: This repo is for demonstration purposes only.
              downloads_url: https://api.github.com/repos/octocat/Spoon-Knife/downloads
              events_url: https://api.github.com/repos/octocat/Spoon-Knife/events
              fork: false
              forks_url: https://api.github.com/repos/octocat/Spoon-Knife/forks
              full_name: octocat/Spoon-Knife
              git_commits_url: https://api.github.com/repos/octocat/Spoon-Knife/git/commits{/sha}
              git_refs_url: https://api.github.com/repos/octocat/Spoon-Knife/git/refs{/sha}
              git_tags_url: https://api.github.com/repos/octocat/Spoon-Knife/git/tags{/sha}
              hooks_url: https://api.github.com/repos/octocat/Spoon-Knife/hooks
              html_url: https://github.com/octocat/Spoon-Knife
              id: 1300192
              issue_comment_url: https://api.github.com/repos/octocat/Spoon-Knife/issues/comments{/number}
              issue_events_url: https://api.github.com/repos/octocat/Spoon-Knife/issues/events{/number}
              issues_url: https://api.github.com/repos/octocat/Spoon-Knife/issues{/number}
              keys_url: https://api.github.com/repos/octocat/Spoon-Knife/keys{/key_id}
              labels_url: https://api.github.com/repos/octocat/Spoon-Knife/labels{/name}
              languages_url: https://api.github.com/repos/octocat/Spoon-Knife/languages
              merges_url: https://api.github.com/repos/octocat/Spoon-Knife/merges
              milestones_url: https://api.github.com/repos/octocat/Spoon-Knife/milestones{/number}
              name: Spoon-Knife
              node_id: MDEwOlJlcG9zaXRvcnkxMzAwMTky
              notifications_url: https://api.github.com/repos/octocat/Spoon-Knife/notifications{?since,all,participating}
              owner:
                avatar_url: https://avatars.githubusercontent.com/u/583231?v=3
                events_url: https://api.github.com/users/octocat/events{/privacy}
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                gravatar_id: ""
                html_url: https://github.com/octocat
                id: 583231
                login: octocat
                node_id: MDQ6VXNlcjU4MzIzMQ==
                organizations_url: https://api.github.com/users/octocat/orgs
                received_events_url: https://api.github.com/users/octocat/received_events
                repos_url: https://api.github.com/users/octocat/repos
                site_admin: false
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                type: User
                url: https://api.github.com/users/octocat
              private: false
              pulls_url: https://api.github.com/repos/octocat/Spoon-Knife/pulls{/number}
              releases_url: https://api.github.com/repos/octocat/Spoon-Knife/releases{/id}
              stargazers_url: https://api.github.com/repos/octocat/Spoon-Knife/stargazers
              statuses_url: https://api.github.com/repos/octocat/Spoon-Knife/statuses/{sha}
              subscribers_url: https://api.github.com/repos/octocat/Spoon-Knife/subscribers
              subscription_url: https://api.github.com/repos/octocat/Spoon-Knife/subscription
              tags_url: https://api.github.com/repos/octocat/Spoon-Knife/tags
              teams_url: https://api.github.com/repos/octocat/Spoon-Knife/teams
              trees_url: https://api.github.com/repos/octocat/Spoon-Knife/git/trees{/sha}
              url: https://api.github.com/repos/octocat/Spoon-Knife
            score: 1
            sha: bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
            url: https://api.github.com/repos/octocat/Spoon-Knife/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
        total_count: 1
    issue-search-result-item-paginated:
      value:
        incomplete_results: false
        items:
          - assignee: null
            author_association: COLLABORATOR
            body: ...
            closed_at: null
            comments: 15
            comments_url: https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/comments
            created_at: 2009-07-12T20:10:41Z
            events_url: https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/events
            html_url: https://github.com/batterseapower/pinyin-toolkit/issues/132
            id: 35802
            labels:
              - color: ff0000
                id: 4
                name: bug
                node_id: MDU6TGFiZWw0
                url: https://api.github.com/repos/batterseapower/pinyin-toolkit/labels/bug
            labels_url: https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/labels{/name}
            locked: true
            milestone:
              closed_at: 2013-02-12T13:22:01Z
              closed_issues: 8
              created_at: 2011-04-10T20:09:31Z
              creator:
                avatar_url: https://github.com/images/error/octocat_happy.gif
                events_url: https://api.github.com/users/octocat/events{/privacy}
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                gravatar_id: ""
                html_url: https://github.com/octocat
                id: 1
                login: octocat
                node_id: MDQ6VXNlcjE=
                organizations_url: https://api.github.com/users/octocat/orgs
                received_events_url: https://api.github.com/users/octocat/received_events
                repos_url: https://api.github.com/users/octocat/repos
                site_admin: false
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                type: User
                url: https://api.github.com/users/octocat
              description: Tracking milestone for version 1.0
              due_on: 2012-10-09T23:39:01Z
              html_url: https://github.com/octocat/Hello-World/milestones/v1.0
              id: 1002604
              labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
              node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
              number: 1
              open_issues: 4
              state: open
              title: v1.0
              updated_at: 2014-03-03T18:58:10Z
              url: https://api.github.com/repos/octocat/Hello-World/milestones/1
            node_id: MDU6SXNzdWUzNTgwMg==
            number: 132
            pull_request:
              diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
              html_url: https://github.com/octocat/Hello-World/pull/1347
              patch_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
              url: https://api/github.com/repos/octocat/Hello-World/pull/1347
            repository_url: https://api.github.com/repos/batterseapower/pinyin-toolkit
            score: 1
            state: open
            title: Line Number Indexes Beyond 20 Not Displayed
            updated_at: 2009-07-19T09:23:43Z
            url: https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132
            user:
              avatar_url: https://secure.gravatar.com/avatar/934442aadfe3b2f4630510de416c5718?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
              events_url: https://api.github.com/users/Nick3C/events{/privacy}
              followers_url: https://api.github.com/users/Nick3C/followers
              following_url: https://api.github.com/users/Nick3C/following{/other_user}
              gists_url: https://api.github.com/users/Nick3C/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/Nick3C
              id: 90254
              login: Nick3C
              node_id: MDQ6VXNlcjkwMjU0
              organizations_url: https://api.github.com/users/Nick3C/orgs
              received_events_url: https://api.github.com/users/Nick3C/received_events
              repos_url: https://api.github.com/users/Nick3C/repos
              site_admin: true
              starred_url: https://api.github.com/users/Nick3C/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/Nick3C/subscriptions
              type: User
              url: https://api.github.com/users/Nick3C
        total_count: 280
    label-search-result-item-paginated:
      value:
        incomplete_results: false
        items:
          - color: 84b6eb
            default: true
            description: New feature or request.
            id: 418327088
            name: enhancement
            node_id: MDU6TGFiZWw0MTgzMjcwODg=
            score: 1
            url: https://api.github.com/repos/octocat/linguist/labels/enhancement
          - color: ee0701
            default: true
            description: Something isn't working.
            id: 418327086
            name: bug
            node_id: MDU6TGFiZWw0MTgzMjcwODY=
            score: 1
            url: https://api.github.com/repos/octocat/linguist/labels/bug
        total_count: 2
    repo-search-result-item-paginated:
      value:
        incomplete_results: false
        items:
          - archive_url: https://api.github.com/repos/dtrupenn/Tetris/{archive_format}{/ref}
            archived: true
            assignees_url: https://api.github.com/repos/dtrupenn/Tetris/assignees{/user}
            blobs_url: https://api.github.com/repos/dtrupenn/Tetris/git/blobs{/sha}
            branches_url: https://api.github.com/repos/dtrupenn/Tetris/branches{/branch}
            clone_url: https://github.com/dtrupenn/Tetris.git
            collaborators_url: https://api.github.com/repos/dtrupenn/Tetris/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/dtrupenn/Tetris/comments{/number}
            commits_url: https://api.github.com/repos/dtrupenn/Tetris/commits{/sha}
            compare_url: https://api.github.com/repos/dtrupenn/Tetris/compare/{base}...{head}
            contents_url: https://api.github.com/repos/dtrupenn/Tetris/contents/{+path}
            contributors_url: https://api.github.com/repos/dtrupenn/Tetris/contributors
            created_at: 2012-01-01T00:31:50Z
            default_branch: master
            deployments_url: https://api.github.com/repos/dtrupenn/Tetris/deployments
            description: A C implementation of Tetris using Pennsim through LC4
            disabled: true
            downloads_url: https://api.github.com/repos/dtrupenn/Tetris/downloads
            events_url: https://api.github.com/repos/dtrupenn/Tetris/events
            fork: false
            forks: 1
            forks_count: 0
            forks_url: https://api.github.com/repos/dtrupenn/Tetris/forks
            full_name: dtrupenn/Tetris
            git_commits_url: https://api.github.com/repos/dtrupenn/Tetris/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/dtrupenn/Tetris/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/dtrupenn/Tetris/git/tags{/sha}
            git_url: git:github.com/dtrupenn/Tetris.git
            has_downloads: true
            has_issues: true
            has_pages: true
            has_projects: true
            has_wiki: true
            homepage: https://github.com
            hooks_url: https://api.github.com/repos/dtrupenn/Tetris/hooks
            html_url: https://github.com/dtrupenn/Tetris
            id: 3081286
            issue_comment_url: https://api.github.com/repos/dtrupenn/Tetris/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/dtrupenn/Tetris/issues/events{/number}
            issues_url: https://api.github.com/repos/dtrupenn/Tetris/issues{/number}
            keys_url: https://api.github.com/repos/dtrupenn/Tetris/keys{/key_id}
            labels_url: https://api.github.com/repos/dtrupenn/Tetris/labels{/name}
            language: Assembly
            languages_url: https://api.github.com/repos/dtrupenn/Tetris/languages
            license:
              html_url: https://api.github.com/licenses/mit
              key: mit
              name: MIT License
              node_id: MDc6TGljZW5zZW1pdA==
              spdx_id: MIT
              url: https://api.github.com/licenses/mit
            master_branch: master
            merges_url: https://api.github.com/repos/dtrupenn/Tetris/merges
            milestones_url: https://api.github.com/repos/dtrupenn/Tetris/milestones{/number}
            mirror_url: git:git.example.com/dtrupenn/Tetris
            name: Tetris
            node_id: MDEwOlJlcG9zaXRvcnkzMDgxMjg2
            notifications_url: https://api.github.com/repos/dtrupenn/Tetris/notifications{?since,all,participating}
            open_issues: 1
            open_issues_count: 0
            owner:
              avatar_url: https://secure.gravatar.com/avatar/e7956084e75f239de85d3a31bc172ace?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
              events_url: https://api.github.com/users/octocat/events{/privacy}
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              gravatar_id: ""
              html_url: https://github.com/octocat
              id: 872147
              login: dtrupenn
              node_id: MDQ6VXNlcjg3MjE0Nw==
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/dtrupenn/received_events
              repos_url: https://api.github.com/users/octocat/repos
              site_admin: true
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              type: User
              url: https://api.github.com/users/dtrupenn
            private: false
            pulls_url: https://api.github.com/repos/dtrupenn/Tetris/pulls{/number}
            pushed_at: 2012-01-01T00:37:02Z
            releases_url: https://api.github.com/repos/dtrupenn/Tetris/releases{/id}
            score: 1
            size: 524
            ssh_url: git@github.com:dtrupenn/Tetris.git
            stargazers_count: 1
            stargazers_url: https://api.github.com/repos/dtrupenn/Tetris/stargazers
            statuses_url: https://api.github.com/repos/dtrupenn/Tetris/statuses/{sha}
            subscribers_url: https://api.github.com/repos/dtrupenn/Tetris/subscribers
            subscription_url: https://api.github.com/repos/dtrupenn/Tetris/subscription
            svn_url: https://svn.github.com/dtrupenn/Tetris
            tags_url: https://api.github.com/repos/dtrupenn/Tetris/tags
            teams_url: https://api.github.com/repos/dtrupenn/Tetris/teams
            trees_url: https://api.github.com/repos/dtrupenn/Tetris/git/trees{/sha}
            updated_at: 2013-01-05T17:58:47Z
            url: https://api.github.com/repos/dtrupenn/Tetris
            watchers: 1
            watchers_count: 1
        total_count: 40
    topic-search-result-item-paginated:
      value:
        incomplete_results: false
        items:
          - created_at: 2016-11-28T22:03:59Z
            created_by: Yukihiro Matsumoto
            curated: true
            description: Ruby was developed by Yukihiro "Matz" Matsumoto in 1995 with the
              intent of having an easily readable programming language. It is
              integrated with the Rails framework to create dynamic
              web-applications. Ruby's syntax is similar to that of Perl and
              Python.
            display_name: Ruby
            featured: true
            name: ruby
            released: December 21, 1995
            score: 1
            short_description: Ruby is a scripting language designed for simplified
              object-oriented programming.
            updated_at: 2017-10-30T18:16:32Z
          - created_at: 2016-12-09T17:03:50Z
            created_by: David Heinemeier Hansson
            curated: true
            description: Ruby on Rails (Rails) is a web application framework written in
              Ruby. It is meant to help simplify the building of complex
              websites.
            display_name: Rails
            featured: true
            name: rails
            released: December 13 2005
            score: 1
            short_description: Ruby on Rails (Rails) is a web application framework written
              in Ruby.
            updated_at: 2017-10-30T16:20:19Z
          - created_at: 2016-12-07T00:07:02Z
            created_by: Guido van Rossum
            curated: true
            description: Python is a dynamically typed programming language designed by
              Guido Van Rossum. Much like the programming language Ruby, Python
              was designed to be easily read by programmers. Because of its
              large following and many libraries, Python can be implemented and
              used to do anything from webpages to scientific research.
            display_name: Python
            featured: true
            name: python
            released: February 20, 1991
            score: 1
            short_description: Python is a dynamically typed programming language.
            updated_at: 2017-10-27T22:45:43Z
          - created_at: 2016-12-16T21:53:08Z
            created_by: Tom Preston-Werner
            curated: true
            description: Jekyll is a blog-aware, site generator written in Ruby. It takes
              raw text files, runs it through a renderer and produces a
              publishable static website.
            display_name: Jekyll
            featured: true
            name: jekyll
            released: "2008"
            score: 1
            short_description: Jekyll is a simple, blog-aware static site generator.
            updated_at: 2017-10-27T19:00:24Z
          - created_at: 2016-12-16T21:53:45Z
            created_by: Hampton Catlin, Natalie Weizenbaum, Chris Eppstein
            curated: true
            description: Sass is a stylesheet language with a main implementation in Ruby.
              It is an extension of CSS that makes improvements to the old
              stylesheet format, such as being able to declare variables and
              using a cleaner nesting syntax.
            display_name: Sass
            featured: true
            name: sass
            released: November 28, 2006
            score: 1
            short_description: Sass is a stable extension to classic CSS.
            updated_at: 2018-01-16T16:30:40Z
          - created_at: 2016-12-17T20:30:44Z
            created_by: Max Howell
            curated: true
            description: Homebrew is a package manager for Apple's macOS operating system.
              It simplifies the installation of software and is popular in the
              Ruby on Rails community.
            display_name: Homebrew
            featured: true
            name: homebrew
            released: "2009"
            score: 1
            short_description: Homebrew is a package manager for macOS.
            updated_at: 2018-02-06T16:14:56Z
        total_count: 6
    user-search-result-item-paginated:
      value:
        incomplete_results: false
        items:
          - avatar_url: https://secure.gravatar.com/avatar/25c7c18223fb42a4c6ae1c8db6f50f9b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
            events_url: https://api.github.com/users/mojombo/events{/privacy}
            followers_url: https://api.github.com/users/mojombo/followers
            following_url: https://api.github.com/users/mojombo/following{/other_user}
            gists_url: https://api.github.com/users/mojombo/gists{/gist_id}
            gravatar_id: ""
            html_url: https://github.com/mojombo
            id: 1
            login: mojombo
            node_id: MDQ6VXNlcjE=
            organizations_url: https://api.github.com/users/mojombo/orgs
            received_events_url: https://api.github.com/users/mojombo/received_events
            repos_url: https://api.github.com/users/mojombo/repos
            score: 1
            site_admin: true
            starred_url: https://api.github.com/users/mojombo/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/mojombo/subscriptions
            type: User
            url: https://api.github.com/users/mojombo
        total_count: 12